import { readFileSync, writeFileSync } from 'fs';
import { join, dirname, basename } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Define the paths to the contract artifacts
const CONTRACT_PATHS = ['OptionToken.sol/OptionToken.json'];

// Base path to the artifacts directory
const ARTIFACTS_BASE_PATH = join(__dirname, '../../bear-market-contracts/artifacts/contracts');

// Output path for the ABIs file
const OUTPUT_PATH = join(__dirname, '../lib/abis.ts');

// Read and process each contract artifact
const abis = CONTRACT_PATHS.reduce((acc, contractPath) => {
    const fullPath = join(ARTIFACTS_BASE_PATH, contractPath);
    try {
        const artifact = JSON.parse(readFileSync(fullPath, 'utf8'));
        const contractName = basename(contractPath, '.json');
        acc[contractName] = artifact.abi;
    } catch (error) {
        console.error(`Error reading artifact for ${contractPath}:`, error);
    }
    return acc;
}, {} as Record<string, any>);

// Generate the TypeScript file content
const fileContent = `// This file is auto-generated by scripts/createABIs.ts
// Do not edit manually

${Object.entries(abis)
    .map(([name, abi]) => `export const ${name}ABI = ${JSON.stringify(abi, null, 2)} as const;`)
    .join('\n\n')}
`;

// Write the file
writeFileSync(OUTPUT_PATH, fileContent);

console.log('ABIs have been successfully generated!');
